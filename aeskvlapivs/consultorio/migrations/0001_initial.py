# Generated by Django 4.0.5 on 2022-06-07 00:47

from django.db import migrations, models
import django.db.models.deletion


class Migration(migrations.Migration):

    initial = True

    dependencies = [
    ]

    operations = [
        migrations.CreateModel(
            name='Paciente',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('name', models.CharField(max_length=100, verbose_name='Nombre')),
                ('gender', models.CharField(choices=[('FEM', 'Femenino'), ('MASC', 'Masculino')], max_length=4, verbose_name='Género')),
                ('age', models.SmallIntegerField(verbose_name='Edad')),
                ('nationality', models.CharField(blank=True, max_length=50, null=True, verbose_name='Nacionalidad')),
                ('etnia', models.CharField(blank=True, max_length=50, null=True, verbose_name='Etnia')),
                ('scholarship', models.CharField(blank=True, max_length=50, null=True, verbose_name='Escolaridad')),
                ('job', models.CharField(blank=True, max_length=100, null=True, verbose_name='Empleo')),
                ('religion', models.CharField(blank=True, max_length=50, null=True, verbose_name='Religión')),
                ('sport', models.CharField(blank=True, max_length=50, null=True, verbose_name='Deportes')),
                ('civil_status', models.CharField(blank=True, max_length=50, null=True, verbose_name='Estado Civil')),
                ('adress', models.CharField(blank=True, max_length=2150, null=True, verbose_name='Domicilio')),
                ('email', models.EmailField(blank=True, max_length=254, null=True)),
                ('phone', models.CharField(max_length=15, verbose_name='Teléfono')),
                ('entitlement', models.CharField(blank=True, choices=[('IMSS', 'IMSS'), ('ISSSTE', 'ISSSTE'), ('Secretaría de Marina', 'Secretaría de Marina'), ('SEDENA', 'SEDENA'), ('PEMEX', 'PEMEX'), ('Otro', 'Otro')], max_length=50, null=True, verbose_name='Derechohabiencia')),
                ('specify', models.CharField(blank=True, max_length=30, null=True, verbose_name='Especifique otra derechohabiencia')),
                ('insurance', models.CharField(blank=True, max_length=30, null=True, verbose_name='Aseguradora')),
                ('immediate_background', models.TextField(verbose_name='Padecimiento o Situación Actual')),
                ('smoking', models.CharField(blank=True, choices=[('POS', 'Positivo'), ('NEG', 'Negativo'), ('Suspendido', 'Suspendido')], max_length=20, null=True, verbose_name='Tabaquismo')),
                ('alcohol', models.CharField(blank=True, choices=[('POS', 'Positivo'), ('NEG', 'Negativo'), ('En Rehabilitación', 'En Rehabilitación'), ('Ocacional', 'Ocacional'), ('Social', 'Social')], max_length=20, null=True, verbose_name='Alcholismo')),
                ('drugs_adictions', models.CharField(blank=True, choices=[('POS', 'Positivo'), ('NEG', 'Negativo'), ('En Rehabilitación', 'En Rehabilitación')], max_length=20, null=True, verbose_name='Adicciones')),
                ('allergies', models.CharField(blank=True, choices=[('POS', 'Positivo'), ('NEG', 'Negativo'), ('En Rehabilitación', 'En Rehabilitación')], max_length=100, null=True, verbose_name='Alergias')),
                ('dislipidemia', models.CharField(blank=True, choices=[('POS', 'Positivo'), ('NEG', 'Negativo')], max_length=100, null=True)),
                ('dm', models.CharField(blank=True, choices=[('POS', 'Positivo'), ('NEG', 'Negativo')], max_length=100, null=True, verbose_name='Diabetes')),
                ('hta', models.CharField(blank=True, choices=[('POS', 'Positivo'), ('NEG', 'Negativo')], max_length=100, null=True, verbose_name='HTA')),
                ('inf_ang_de_pecho', models.CharField(blank=True, choices=[('POS', 'Positivo'), ('NEG', 'Negativo')], max_length=100, null=True, verbose_name='Infartos o angina de pecho')),
                ('evc', models.CharField(blank=True, choices=[('POS', 'Positivo'), ('NEG', 'Negativo')], max_length=100, null=True, verbose_name='Eventos Cerebrovasculares')),
                ('ivp', models.CharField(blank=True, choices=[('POS', 'Positivo'), ('NEG', 'Negativo')], max_length=100, null=True, verbose_name='Insuficiencia vascular periférica')),
                ('EPOC', models.CharField(blank=True, choices=[('POS', 'Positivo'), ('NEG', 'Negativo')], max_length=100, null=True, verbose_name='Enfermedad Pulmonar Obstructiva Crónica')),
                ('cancer', models.CharField(blank=True, choices=[('POS', 'Positivo'), ('NEG', 'Negativo')], max_length=100, null=True, verbose_name='Cáncer')),
                ('otras_enf', models.TextField(blank=True, null=True, verbose_name='Complemento, Otros Antecedentes y Enfermedades')),
                ('cir_previas', models.CharField(blank=True, max_length=200, null=True, verbose_name='Cirugías previas')),
                ('dxs_antec', models.TextField(blank=True, help_text='No esciriba aquí: Guarde para ver Resultados', null=True, verbose_name='Resumen de Diagnósticos por Antecedentes')),
                ('actual_situation', models.TextField(verbose_name='Situación Actual y Exploración')),
                ('tension_sistolica', models.IntegerField(blank=True, default=1, null=True)),
                ('tension_diastolica', models.PositiveSmallIntegerField(blank=True, default=1, null=True)),
                ('pam', models.IntegerField(default=0, help_text='No esciriba aquí: Guarde para ver Resultados', verbose_name='PAM')),
                ('fc', models.IntegerField(blank=True, null=True, verbose_name='FC')),
                ('fr', models.IntegerField(blank=True, null=True, verbose_name='FR')),
                ('temp', models.DecimalField(blank=True, decimal_places=2, max_digits=5, null=True, verbose_name='Temp')),
                ('saturacion', models.IntegerField(blank=True, null=True, verbose_name='Sa02')),
                ('dextrostix', models.IntegerField(blank=True, null=True, verbose_name='Dextrostix')),
                ('a1c', models.CharField(blank=True, max_length=5, null=True)),
                ('peso', models.FloatField(blank=True, default=0, null=True)),
                ('estatura', models.FloatField(blank=True, default=1, null=True)),
                ('imc', models.DecimalField(decimal_places=2, default=0, help_text='No esciriba aquí: Guarde para ver Resultados', max_digits=5, verbose_name='IMC')),
                ('climc', models.CharField(blank=True, help_text='No esciriba aquí: Guarde para ver Resultados', max_length=100, null=True, verbose_name='Clasificación Masa Corporal')),
                ('asc', models.DecimalField(decimal_places=2, default=0, help_text='No esciriba aquí: Guarde para ver Resultados', max_digits=5, verbose_name='ASC')),
                ('per_abdominal', models.IntegerField(blank=True, null=True, verbose_name='Per. Abd en cms')),
                ('Imagenología1', models.FileField(blank=True, help_text='formato jpg, jpge', null=True, upload_to='Paciente')),
                ('Imagenología2', models.FileField(blank=True, help_text='formato jpg, jpge', null=True, upload_to='Paciente')),
                ('Imagenología3', models.FileField(blank=True, help_text='formato jpg, jpge', null=True, upload_to='Paciente')),
                ('Labs1', models.FileField(blank=True, help_text='formato pdf', null=True, upload_to='Paciente')),
                ('Labs2', models.FileField(blank=True, help_text='formato pdf', null=True, upload_to='Paciente')),
                ('recetas', models.FileField(blank=True, help_text='formato pdf', null=True, upload_to='Paciente', verbose_name='Recetas')),
                ('diagnosis', models.TextField(verbose_name='Diagnósticos')),
                ('obs', models.TextField(verbose_name='Observaciones')),
                ('txs', models.TextField(verbose_name='Manejos y Tratamientos')),
                ('timestamp', models.DateTimeField(auto_now_add=True, verbose_name='Fecha de Registro')),
                ('update', models.DateTimeField(auto_now=True, verbose_name='Fecha de Actualización')),
                ('reevaluación', models.DateTimeField(blank=True, null=True, verbose_name='prox. reevaluación')),
            ],
            options={
                'verbose_name_plural': 'a) Pacientes',
            },
        ),
        migrations.CreateModel(
            name='Reevaluacion',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('entitlement', models.CharField(blank=True, choices=[('IMSS', 'IMSS'), ('ISSSTE', 'ISSSTE'), ('Secretaría de Marina', 'Secretaría de Marina'), ('SEDENA', 'SEDENA'), ('PEMEX', 'PEMEX'), ('Otro', 'Otro')], max_length=50, null=True, verbose_name='Derechohabiencia')),
                ('specify', models.CharField(blank=True, max_length=30, null=True, verbose_name='Especifique otra derechohabiencia')),
                ('phone', models.CharField(blank=True, max_length=15, null=True, verbose_name='Teléfono')),
                ('email', models.EmailField(blank=True, max_length=254, null=True)),
                ('dxs_previos', models.TextField(blank=True, null=True)),
                ('immediate_background', models.TextField(verbose_name='Padecimiento o Situación Actual')),
                ('tension_sistolica', models.PositiveSmallIntegerField(blank=True, default=1, null=True)),
                ('tension_diastolica', models.PositiveSmallIntegerField(blank=True, default=1, null=True)),
                ('pam', models.IntegerField(default=0, verbose_name='PAM')),
                ('fc', models.IntegerField(blank=True, null=True, verbose_name='FC')),
                ('fr', models.IntegerField(blank=True, null=True, verbose_name='FR')),
                ('temp', models.DecimalField(blank=True, decimal_places=2, max_digits=5, null=True, verbose_name='Temp')),
                ('saturacion', models.IntegerField(blank=True, null=True, verbose_name='Sa02')),
                ('dextrostix', models.IntegerField(blank=True, default=0, null=True, verbose_name='Dextrostix')),
                ('a1c', models.CharField(blank=True, max_length=5, null=True)),
                ('peso', models.FloatField(blank=True, default=0, null=True)),
                ('estatura', models.FloatField(blank=True, default=1, null=True)),
                ('imc', models.DecimalField(decimal_places=2, default=0, max_digits=5, verbose_name='IMC')),
                ('climc', models.CharField(blank=True, max_length=100, null=True, verbose_name='Calsificación Masa Corporal')),
                ('asc', models.DecimalField(decimal_places=2, default=0, max_digits=5, verbose_name='ASC')),
                ('per_abdominal', models.IntegerField(blank=True, null=True, verbose_name='Per. Abd en cms')),
                ('expl', models.TextField(blank=True, null=True, verbose_name='Complemente Exploración')),
                ('Imagenología1', models.FileField(blank=True, help_text='formato jpg, jpge', null=True, upload_to='Reevalucion')),
                ('Imagenología2', models.FileField(blank=True, help_text='formato jpg, jpge', null=True, upload_to='Reevalucion')),
                ('Imagenología3', models.FileField(blank=True, help_text='formato jpg, jpge', null=True, upload_to='Reevalucion')),
                ('Labs1', models.FileField(blank=True, help_text='formato pdf, jpg, jpge', null=True, upload_to='Reevalucion')),
                ('Labs2', models.FileField(blank=True, help_text='formato pdf, jpg, jpge', null=True, upload_to='Reevalucion')),
                ('recetas', models.FileField(blank=True, help_text='formato pdf, jpg, jpge', null=True, upload_to='Reevalucion', verbose_name='Recetas')),
                ('diagnosis', models.TextField(verbose_name='Diagnósticos')),
                ('obs', models.TextField(verbose_name='Observaciones')),
                ('txs', models.TextField(verbose_name='Manejos y Tratamientos')),
                ('timestamp', models.DateTimeField(auto_now_add=True, verbose_name='Fecha de Registro')),
                ('update', models.DateTimeField(auto_now=True, verbose_name='Fecha de Actualización')),
                ('reevaluación', models.DateTimeField(blank=True, null=True, verbose_name='prox. reevaluación')),
                ('paciente', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='consultorio.paciente')),
            ],
            options={
                'verbose_name_plural': 'b) Reevaluación',
            },
        ),
    ]
